import datetime

# This file was automatically generated by module/config/config_updater.py.
# Don't modify it manually.


class GeneratedConfig:
    """
    Auto generated configuration
    """

    # Group `Scheduler`
    Scheduler_Enable = False  # True, False
    Scheduler_NextRun = datetime.datetime(2020, 1, 1, 0, 0)
    Scheduler_Command = 'Alas'
    Scheduler_ServerUpdate = '00:00'

    # Group `Error`
    Error_Restart = 'game'  # game, game_emulator
    Error_SaveError = True
    Error_ScreenshotLength = 1
    Error_OnePushConfig = 'provider: null'

    # Group `Optimization`
    Optimization_ScreenshotInterval = 0.3
    Optimization_CombatScreenshotInterval = 1.0
    Optimization_WhenTaskQueueEmpty = 'goto_main'  # stay_there, goto_main, close_game

    # Group `Playwright`
    Playwright_Browser = 'msedge'  # msedge, msedge-beta, msedge-dev, msedge-canary, chrome, chrome-beta, chrome-dev, chrome-canary
    Playwright_Headless = False
    Playwright_CleanPagesOnStart = True
    Playwright_AutoOpenDevtools = False
    Playwright_AutoAcceptDialog = True
    Playwright_ExtensionDirectory = '$LOCALAPPDATA/Microsoft/Edge/User Data/Default/Extensions'
    Playwright_ExtensionNames = 'Ruffle'
    Playwright_ExtraChromiumArgs = '--disable-blink-features=AutomationControlled\n--disable-features=IsolateOrigins,site-per-process\n--disable-infobars\n'

    # Group `ProfileSettings`
    ProfileSettings_MinNpKeep = 20000
    ProfileSettings_JellyNeoExpiry = 168
    ProfileSettings_DataStorage = 'local'  # local, redis
    ProfileSettings_TaskSoftTerminationTime = 5

    # Group `NeopianBank`
    NeopianBank_DepositThreshold = 1000000
    NeopianBank_MaxDeposit = 500000

    # Group `PetCares`
    PetCares_FeedBlacklist = 'poison\nrotten\ndung\nglowing\nclay\nsmelly\n'
    PetCares_PlayBlackList = None
    PetCares_GroomBlackList = None
    PetCares_MaxFeedValue = 1000
    PetCares_MaxFeedLevel = 'full up'  # dying, starving, famished, very hungry, hungry, not hungry, fine, satiated, full up, very full, bloated

    # Group `Restocking`
    Restocking_RestockPerShop = 5
    Restocking_MinProfit = 1000
    Restocking_MaxShopStock = 5
    Restocking_MaxCost = 1000000
    Restocking_ImmediateProfit = 3500
    Restocking_ShopList = '1,2,3,5,14,15,16,20,25,34,35,39,40,42,44,46,50,56,57,61,81,95,97,101,103'
    Restocking_BargainStrategyScript = "# purposes: list of shopkeeper's purposes\n# offers: list of your offers\n# depth: number of bargains made\npurposed = purposes[-1]\nlast_offer = offers[-1] if offers else 0\nif purposed > 100000 or depth > 5:\n  return purposed\nif len(purposes) > 2 and purposes[-2] == purposes[-3]:\n  return purposed\nif last_offer == 0:\n  return int(purposed * 0.4 // 10 * 10)\ndelta = purposed - last_offer\nstep  = 20\nif delta > 3000:\n  step = 1000\nelif delta > 1500:\n  step = 500\nelif delta > 300:\n  step = 100\nelif delta > 150:\n  step = 50\nret = max(1, min(purposed, last_offer + int(delta * 0.4 // step * step)))\nif ret == last_offer:\n    ret = int(purposed // 10 * 10)\nreturn ret\n"

    # Group `QuickStock`
    QuickStock_KeepInventorySlot = 5
    QuickStock_DepositValue = 90000
    QuickStock_RestockProfit = 1000
    QuickStock_CategoryKeeps = 'food:10\ngrooming: 1\ntoy: 1\n'
    QuickStock_PriceStrategyScript = "mkp = item['market_price']\nif mkp < 10000:\n    return mkp * 0.99\nreturn mkp\n"
    QuickStock_ForceDepositList = 'Basic Gift Box\n'
    QuickStock_DepositBlacklist = None
    QuickStock_DonateNameList = 'Old Rotten Right Sandal\nOld Rotten Left Sandal\nOld Rotten Right Boot\nOld Rotten Left Boot\nOld Rotten Right Shoe\nOld Rotten Left Shoe\n'

    # Group `ShopWizard`
    ShopWizard_ShopWizardRequests = {}

    # Group `PlayerStorage`
    PlayerStorage_DailyQuestTimesLeft = {}
    PlayerStorage_InventoryData = {}
    PlayerStorage_StockData = {}
    PlayerStorage_DepositData = {}
