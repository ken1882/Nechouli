import datetime

# This file was automatically generated by module/config/config_updater.py.
# Don't modify it manually.


class GeneratedConfig:
    """
    Auto generated configuration
    """

    # Group `Scheduler`
    Scheduler_Enable = False  # True, False
    Scheduler_NextRun = datetime.datetime(2020, 1, 1, 0, 0)
    Scheduler_Command = 'Alas'
    Scheduler_ServerUpdate = '00:00'

    # Group `Error`
    Error_Restart = 'game'  # game, game_emulator
    Error_SaveError = True
    Error_ScreenshotLength = 1
    Error_OnePushConfig = 'provider: null'

    # Group `Optimization`
    Optimization_ScreenshotInterval = 0.3
    Optimization_CombatScreenshotInterval = 1.0
    Optimization_WhenTaskQueueEmpty = 'stay_there'  # stay_there, goto_main, close_game
    Optimization_MaxConcurrentInstance = 3

    # Group `Playwright`
    Playwright_Browser = 'msedge'  # msedge, chrome
    Playwright_SelfHeal = False
    Playwright_Headless = False
    Playwright_CleanPagesOnStart = False
    Playwright_AutoOpenDevtools = False
    Playwright_RemoteDebuggingAddress = '127.0.0.1:9222'
    Playwright_LaunchDedicatedBrowser = False
    Playwright_AutoAcceptDialog = True
    Playwright_UseDefaultProfile = False
    Playwright_CustomUserAgent = None
    Playwright_ExtensionDirectory = '$LOCALAPPDATA/Microsoft/Edge/User Data/Default/Extensions'
    Playwright_ExtensionNames = 'Ruffle\nAdGuard\n'
    Playwright_ExtraChromiumArgs = '--disable-features=IsolateOrigins,site-per-process\n--disable-infobars\n--window-size=1280,800\n'

    # Group `ProfileSettings`
    ProfileSettings_MinNpKeep = 100000
    ProfileSettings_JellyNeoExpiry = 168
    ProfileSettings_TaskSoftTerminationTime = 5

    # Group `NeopianBank`
    NeopianBank_DepositThreshold = 1000000
    NeopianBank_MaxDeposit = 500000

    # Group `PetCares`
    PetCares_FeedBlacklist = 'poison\nrotten\ndung\nglowing\nclay\nsmelly\n'
    PetCares_PlayBlackList = None
    PetCares_GroomBlackList = None
    PetCares_MaxFeedValue = 1000
    PetCares_MaxFeedLevel = 'full up'  # dying, starving, famished, very hungry, hungry, not hungry, fine, satiated, full up, very full, bloated

    # Group `DailyQuest`
    DailyQuest_PurchaseCheapItems = False
    DailyQuest_DailyQuestRestockTimesLeft = {}
    DailyQuest_DailyQuestFeedTimesLeft = {}

    # Group `Restocking`
    Restocking_ActiveRestocking = False
    Restocking_ActiveRestockInterval = 60
    Restocking_EnableCaptchaDebug = False
    Restocking_RestockPerShop = 5
    Restocking_MinProfit = 1000
    Restocking_MaxShopStock = 5
    Restocking_MaxCost = 1000000
    Restocking_ImmediateProfit = 3500
    Restocking_ShopList = '1,2,3,5,10,14,15,16,20,25,34,35,39,40,42,44,46,50,56,57,61,80,81,95,97,101,103'
    Restocking_BargainStrategyScript = "# purposes: list of shopkeeper's purposes\n# offers: list of your offers\n# depth: number of bargains made\npurposed = purposes[-1]\nlast_offer = offers[-1] if offers else 0\nif purposed > 100000 or depth > 5:\n  return purposed\nif len(purposes) > 2 and purposes[-2] == purposes[-3]:\n  return purposed\nif last_offer == 0:\n  return int(purposed * 0.4 // 10 * 10)\ndelta = purposed - last_offer\nstep  = 20\nif delta > 3000:\n  step = 1000\nelif delta > 1500:\n  step = 500\nelif delta > 300:\n  step = 100\nelif delta > 150:\n  step = 50\nret = max(1, min(purposed, last_offer + int(delta * 0.4 // step * step)))\nif ret == last_offer:\n    ret = int(purposed // 10 * 10)\nreturn ret\n"

    # Group `QuickStock`
    QuickStock_KeepInventorySlot = 5
    QuickStock_DepositValue = 100000
    QuickStock_RestockProfit = 1000
    QuickStock_WithdrawTill = True
    QuickStock_CategoryKeeps = 'food:10\ngrooming: 1\ntoy: 1\n'
    QuickStock_PriceStrategyScript = "mkp = item['market_price']\nif mkp < 10000:\n    return mkp * 0.99\nreturn mkp\n"
    QuickStock_ForceDepositList = 'Basic Gift Box\n'
    QuickStock_DepositBlacklist = None
    QuickStock_DonateNameList = 'Old Rotten Right Sandal\nOld Rotten Left Sandal\nOld Rotten Right Boot\nOld Rotten Left Boot\nOld Rotten Right Shoe\nOld Rotten Left Shoe\n'

    # Group `HealingSpring`
    HealingSpring_Interval = 30

    # Group `StockMarket`
    StockMarket_SellProfitRatio = 20

    # Group `ShopWizard`
    ShopWizard_EnableActivePriceUpdate = False
    ShopWizard_PriceUpdateInterval = 30
    ShopWizard_PriceUpdateBatchSize = 10
    ShopWizard_PriceUpdateRescans = 5
    ShopWizard_ShopWizardRequests = {}

    # Group `PetTraining`
    PetTraining_BuyFeeFromPlayers = False
    PetTraining_TrainPriority = 'str > def > hp > mov > lv'
    PetTraining_Config = 'PetName:Academy:TargetLv:TargetStr:TargetDef:TargetMov:TargetHp\n'
    PetTraining_PendingTrainingFee = {}

    # Group `BattleDome`
    BattleDome_PetName = 'FightingPetName'
    BattleDome_Difficulty = 'Easy'  # Easy, Normal, Hard
    BattleDome_GrindNP = False
    BattleDome_CombatOrder = '# seperate turn by line, first valid line will be turn 1 and so on\n# format: item1,item2,ability (None for bypass)\nThe Omelette Sceptre,Downsize!,Meditate\nCursed Elixir of Neovia,Wand of the Dark Faerie,None\n'
    BattleDome_Opponent = 'Koi Warrior'  # Flaming Meerca, Count Von Roo, Harry the Mutant Moehog, Edna, Balthazar, Pant Devil, Evil Sloth Clone, Robo Grarrl, Tiki Tack Man, Chiazilla, Koi Warrior, Highland Chia, The Black Pteri, Chia Clown, Snow Faerie, Ryshu the Nimmo, The Snowager, Grarrg, Sabre-X, Punchbag Bob, Meuka, Tekkitu the Witch Doctor, Vira, Advisor Broo, Meerca Henchmen, Boochi, Giant Hungry Malevolent Chomby, Mootix Warrior, S750 Kreludan Defender Robot, Neopets v2, Donny, Valin, Giant Spectral Mutant Walein

    # Group `Auction`
    Auction_IsRunningBackground = False
    Auction_MaxConcurrentBids = 10
    Auction_PlaceBidUntilMinutesLeft = 5
    Auction_BiddingConfig = '# ItemName:MaxBid:NumbersToBid\n'

    # Group `VoidsWithin`
    VoidsWithin_DelayForDailyFeed = True
    VoidsWithin_AvailablePetsCount = 0
    VoidsWithin_DispatchBlacklist = None
    VoidsWithin_EarnedPlotPoints = {}

    # Group `PlayerStorage`
    PlayerStorage_NeoPoints = {}
    PlayerStorage_InventoryData = {}
    PlayerStorage_StockData = {}
    PlayerStorage_PetsData = {}

    # Group `SafetyDepositBox`
    SafetyDepositBox_DepositData = {}
